# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: nginx-deployment
#   namespace: hannah
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: my-nginx
#   template:
#     metadata:
#       labels:
#         app: my-nginx
#     spec:
#       containers:
#         - name: nginx
#           image: nginx
#           ports:
#           - containerPort: 80

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: nginx-service
#   namespace: hannah  
# spec:
# # Ingress를 적용하기 위해 clusterIp로 변경
#   type: ClusterIP
#   ports:
#   - name: http
#     port: 80
#     targetPort: 80
#   selector:
#     app: my-nginx

# ---

# # Ingress-controller 설치는 별도 필요
# # Ingress-controller도 nginx 기반으로 구성돼있음.
# # Ingress-controller를 설치시에 alb 생성되고, Ingress 자원과 함께 서비스 라우팅 수행
# # Ingress-controller 1개에서 여러개의 Ingress로 라우팅
# # kubectl apply -f "https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/aws/deploy.yaml" : ingress controller 만드는 작업 (cluserter에 여러명 작업할때 한명만 실행)

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: my-nginx-ingress
#   namespace: hannah
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/rewrite-target: /$1 #첫번째 Prefix 제거후 endpoint 전달

# spec:
#   rules:
#   - host: server.hannah.store
#     http:
#       paths:
#       - path: /product-service/(.*)
#         pathType: Prefix
#         backend:
#           sevice: 
#             name: nginx-service
#             port:
#               number: 80
#       - path: /order-service/(.*)
#         pathType: Prefix
#         backend:
#           sevice: 
#             name: nginx-service
#             port:
#               number: 80

#             # 서비스 목록 조회 : kubectl get svc -A (svc : service 약자)

# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: my-nginx-ingress
#   namespace: hannah
#   annotations:
#     kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/rewrite-target: /$1 # 첫번째 Prefix 제거후 endpoint 전달

# spec:
#   rules:
#   - host: server.hannah.store
#     http:
#       paths:
#       - path: /product-service/(.*)
#         pathType: Prefix
#         backend:
#           service: 
#             name: nginx-service
#             port:
#               number: 80
#       - path: /order-service/(.*)
#         pathType: Prefix
#         backend:
#           service: 
#             name: nginx-service
#             port:
#               number: 80

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: hannah
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-nginx
  template:
    metadata:
      labels:
        app: my-nginx
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata: 
  name: nginx-service
  namespace: hannah  # Service의 namespace 설정
spec:
  # ingress를 적용하기 위해 ClusterIP로 변경
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    app: my-nginx
---
# ingressController 설치는 별도 필요
# ingress controller도 nginx 기반으로 구성
# ingress controller를 설치시에 alb생성되고, ingress 자원과 함께 서비스 라우팅 수행
# ingress controller 1개에서 여러개의 ingress로 라우팅
# kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/aws/deploy.yaml

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-nginx-ingress
  namespace: hannah  # Ingress의 namespace 설정
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1 # 첫번째 prefix제거후 endpoint 전달
    
spec:
  rules:
    - host: server.dabok.store
      http: 
        paths:
          - path: /product-service/(.*)
            pathType: Prefix
            backend:
              service:
                name: nginx-service
                port: 
                  number: 80
          - path: /order-service/(.*)
            pathType: Prefix
            backend:
              service:
                name: nginx-service
                port: 
                  number: 80
